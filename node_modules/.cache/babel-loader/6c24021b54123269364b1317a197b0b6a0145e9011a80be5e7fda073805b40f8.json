{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zerod\\\\WebDesign\\\\Elomate-Team-main\\\\src\\\\Mentee\\\\Games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Games.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Games() {\n  _s();\n  const [player, setPlayer] = useState('🚜');\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [gameEnded, setGameEnded] = useState(false);\n  const handleMove = index => {\n    if (!gameEnded && board[index] === '') {\n      const newBoard = [...board];\n      newBoard[index] = player;\n      setBoard(newBoard);\n      const winner = checkWinner(newBoard);\n      if (winner) {\n        setGameEnded(true);\n      } else {\n        setPlayer(player === '🚜' ? '🏗️' : '🚜');\n      }\n    }\n  };\n  const restartGame = () => {\n    setPlayer('🚜');\n    setBoard(Array(9).fill(''));\n    setGameEnded(false);\n  };\n  const checkWinner = currentBoard => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (currentBoard[a] && currentBoard[a] === currentBoard[b] && currentBoard[a] === currentBoard[c]) {\n        return currentBoard[a];\n      }\n    }\n    return null;\n  };\n  const allCellsFilled = () => {\n    return board.every(cell => cell !== '');\n  };\n  useEffect(() => {\n    if (allCellsFilled() && !gameEnded) {\n      setGameEnded(true);\n    }\n  }, [board, gameEnded]);\n  const renderStatus = () => {\n    const winner = checkWinner(board);\n    if (winner) {\n      return `Winner: ${winner}`;\n    } else if (allCellsFilled()) {\n      return `It's a draw!`;\n    } else {\n      return `Next player: ${player}`;\n    }\n  };\n  const renderCell = index => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell\",\n    onClick: () => handleMove(index),\n    children: board[index]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"games\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, index) => renderCell(index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: renderStatus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), (gameEnded || allCellsFilled()) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"restart-button\",\n      onClick: restartGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Games, \"e09HvaETOiNnRAifdKBQ0R1NsP8=\");\n_c = Games;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Games","_s","player","setPlayer","board","setBoard","Array","fill","gameEnded","setGameEnded","handleMove","index","newBoard","winner","checkWinner","restartGame","currentBoard","lines","i","length","a","b","c","allCellsFilled","every","cell","renderStatus","renderCell","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/zerod/WebDesign/Elomate-Team-main/src/Mentee/Games.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Games.css';\n\nfunction Games() {\n    const [player, setPlayer] = useState('🚜');\n    const [board, setBoard] = useState(Array(9).fill(''));\n    const [gameEnded, setGameEnded] = useState(false);\n\n    const handleMove = (index) => {\n        if (!gameEnded && board[index] === '') {\n            const newBoard = [...board];\n            newBoard[index] = player;\n            setBoard(newBoard);\n            const winner = checkWinner(newBoard);\n            if (winner) {\n                setGameEnded(true);\n            } else {\n                setPlayer(player === '🚜' ? '🏗️' : '🚜');\n            }\n        }\n    };\n\n    const restartGame = () => {\n        setPlayer('🚜');\n        setBoard(Array(9).fill(''));\n        setGameEnded(false);\n    };\n\n    const checkWinner = (currentBoard) => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (currentBoard[a] && currentBoard[a] === currentBoard[b] && currentBoard[a] === currentBoard[c]) {\n                return currentBoard[a];\n            }\n        }\n        return null;\n    };\n\n    const allCellsFilled = () => {\n        return board.every(cell => cell !== '');\n    };\n\n    useEffect(() => {\n        if (allCellsFilled() && !gameEnded) {\n            setGameEnded(true);\n        }\n    }, [board, gameEnded]);\n\n    const renderStatus = () => {\n        const winner = checkWinner(board);\n        if (winner) {\n            return `Winner: ${winner}`;\n        } else if (allCellsFilled()) {\n            return `It's a draw!`;\n        } else {\n            return `Next player: ${player}`;\n        }\n    };\n\n    const renderCell = (index) => (\n        <div className=\"cell\" onClick={() => handleMove(index)}>\n            {board[index]}\n        </div>\n    );\n\n    return (\n        <div className=\"games\">\n            <div className=\"title\">\n                <h><b>Games</b></h>\n            </div>\n            <hr />\n            <div className=\"board\">\n                {board.map((cell, index) => renderCell(index))}\n            </div>\n            <div className=\"status\">{renderStatus()}</div>\n            {(gameEnded || allCellsFilled()) && <button className=\"restart-button\" onClick={restartGame}>Restart</button>}\n        </div>\n    );\n}\n\nexport default Games;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}